const colorMap = {
  astNode: {
    AnyTypeAnnotation: "",
    ArgumentPlaceholder: "",
    ArrayExpression: "",
    ArrayPattern: "",
    ArrayTypeAnnotation: "",
    ArrowFunctionExpression: "",
    AssignmentExpression: "",
    AssignmentPattern: "",
    AwaitExpression: "",
    BigIntLiteral: "",
    BinaryExpression: "",
    BindExpression: "",
    BlockStatement: "",
    BooleanLiteral: "",
    BooleanLiteralTypeAnnotation: "",
    BooleanTypeAnnotation: "",
    BreakStatement: "",
    CallExpression: "",
    CatchClause: "",
    ClassBody: "",
    ClassDeclaration: "",
    ClassExpression: "",
    ClassImplements: "",
    ClassMethod: "",
    ClassPrivateMethod: "",
    ClassPrivateProperty: "",
    ClassProperty: "",
    ConditionalExpression: "",
    ContinueStatement: "",
    DebuggerStatement: "",
    DecimalLiteral: "",
    DeclareClass: "",
    DeclareExportAllDeclaration: "",
    DeclareExportDeclaration: "",
    DeclareFunction: "",
    DeclareInterface: "",
    DeclareModule: "",
    DeclareModuleExports: "",
    DeclareOpaqueType: "",
    DeclareTypeAlias: "",
    DeclareVariable: "",
    DeclaredPredicate: "",
    Decorator: "",
    Directive: "",
    DirectiveLiteral: "",
    DoExpression: "",
    DoWhileStatement: "",
    EmptyStatement: "",
    EmptyTypeAnnotation: "",
    EnumBooleanBody: "",
    EnumBooleanMember: "",
    EnumDeclaration: "",
    EnumDefaultedMember: "",
    EnumNumberBody: "",
    EnumNumberMember: "",
    EnumStringBody: "",
    EnumStringMember: "",
    EnumSymbolBody: "",
    ExistsTypeAnnotation: "",
    ExportAllDeclaration: "",
    ExportDefaultDeclaration: "",
    ExportDefaultSpecifier: "",
    ExportNamedDeclaration: "",
    ExportNamespaceSpecifier: "",
    ExportSpecifier: "",
    ExpressionStatement: "",
    File: "",
    ForInStatement: "",
    ForOfStatement: "",
    ForStatement: "",
    FunctionDeclaration: "",
    FunctionExpression: "",
    FunctionTypeAnnotation: "",
    FunctionTypeParam: "",
    GenericTypeAnnotation: "",
    Identifier: "",
    IfStatement: "",
    Import: "",
    ImportAttribute: "",
    ImportDeclaration: "",
    ImportDefaultSpecifier: "",
    ImportNamespaceSpecifier: "",
    ImportSpecifier: "",
    IndexedAccessType: "",
    InferredPredicate: "",
    InterfaceDeclaration: "",
    InterfaceExtends: "",
    InterfaceTypeAnnotation: "",
    InterpreterDirective: "",
    IntersectionTypeAnnotation: "",
    JSXAttribute: "",
    JSXClosingElement: "",
    JSXClosingFragment: "",
    JSXElement: "",
    JSXEmptyExpression: "",
    JSXExpressionContainer: "",
    JSXFragment: "",
    JSXIdentifier: "",
    JSXMemberExpression: "",
    JSXNamespacedName: "",
    JSXOpeningElement: "",
    JSXOpeningFragment: "",
    JSXSpreadAttribute: "",
    JSXSpreadChild: "",
    JSXText: "",
    LabeledStatement: "",
    LogicalExpression: "",
    MemberExpression: "",
    MetaProperty: "",
    MixedTypeAnnotation: "",
    ModuleExpression: "",
    NewExpression: "",
    Noop: "",
    NullLiteral: "",
    NullLiteralTypeAnnotation: "",
    NullableTypeAnnotation: "",
    NumberLiteral$1: "",
    NumberLiteralTypeAnnotation: "",
    NumberTypeAnnotation: "",
    NumericLiteral: "",
    ObjectExpression: "",
    ObjectMethod: "",
    ObjectPattern: "",
    ObjectProperty: "",
    ObjectTypeAnnotation: "",
    ObjectTypeCallProperty: "",
    ObjectTypeIndexer: "",
    ObjectTypeInternalSlot: "",
    ObjectTypeProperty: "",
    ObjectTypeSpreadProperty: "",
    OpaqueType: "",
    OptionalCallExpression: "",
    OptionalIndexedAccessType: "",
    OptionalMemberExpression: "",
    ParenthesizedExpression: "",
    PipelineBareFunction: "",
    PipelinePrimaryTopicReference: "",
    PipelineTopicExpression: "",
    Placeholder: "",
    PrivateName: "",
    Program: "",
    QualifiedTypeIdentifier: "",
    RecordExpression: "",
    RegExpLiteral: "",
    RegexLiteral$1: "",
    RestElement: "",
    RestProperty$1: "",
    ReturnStatement: "",
    SequenceExpression: "",
    SpreadElement: "",
    SpreadProperty$1: "",
    StaticBlock: "",
    StringLiteral: "",
    StringLiteralTypeAnnotation: "",
    StringTypeAnnotation: "",
    Super: "",
    SwitchCase: "",
    SwitchStatement: "",
    SymbolTypeAnnotation: "",
    TSAnyKeyword: "",
    TSArrayType: "",
    TSAsExpression: "",
    TSBigIntKeyword: "",
    TSBooleanKeyword: "",
    TSCallSignatureDeclaration: "",
    TSConditionalType: "",
    TSConstructSignatureDeclaration: "",
    TSConstructorType: "",
    TSDeclareFunction: "",
    TSDeclareMethod: "",
    TSEnumDeclaration: "",
    TSEnumMember: "",
    TSExportAssignment: "",
    TSExpressionWithTypeArguments: "",
    TSExternalModuleReference: "",
    TSFunctionType: "",
    TSImportEqualsDeclaration: "",
    TSImportType: "",
    TSIndexSignature: "",
    TSIndexedAccessType: "",
    TSInferType: "",
    TSInterfaceBody: "",
    TSInterfaceDeclaration: "",
    TSIntersectionType: "",
    TSIntrinsicKeyword: "",
    TSLiteralType: "",
    TSMappedType: "",
    TSMethodSignature: "",
    TSModuleBlock: "",
    TSModuleDeclaration: "",
    TSNamedTupleMember: "",
    TSNamespaceExportDeclaration: "",
    TSNeverKeyword: "",
    TSNonNullExpression: "",
    TSNullKeyword: "",
    TSNumberKeyword: "",
    TSObjectKeyword: "",
    TSOptionalType: "",
    TSParameterProperty: "",
    TSParenthesizedType: "",
    TSPropertySignature: "",
    TSQualifiedName: "",
    TSRestType: "",
    TSStringKeyword: "",
    TSSymbolKeyword: "",
    TSThisType: "",
    TSTupleType: "",
    TSTypeAliasDeclaration: "",
    TSTypeAnnotation: "",
    TSTypeAssertion: "",
    TSTypeLiteral: "",
    TSTypeOperator: "",
    TSTypeParameter: "",
    TSTypeParameterDeclaration: "",
    TSTypeParameterInstantiation: "",
    TSTypePredicate: "",
    TSTypeQuery: "",
    TSTypeReference: "",
    TSUndefinedKeyword: "",
    TSUnionType: "",
    TSUnknownKeyword: "",
    TSVoidKeyword: "",
    TaggedTemplateExpression: "",
    TemplateElement: "",
    TemplateLiteral: "",
    ThisExpression: "",
    ThisTypeAnnotation: "",
    ThrowStatement: "",
    TopicReference: "",
    TryStatement: "",
    TupleExpression: "",
    TupleTypeAnnotation: "",
    TypeAlias: "",
    TypeAnnotation: "",
    TypeCastExpression: "",
    TypeParameter: "",
    TypeParameterDeclaration: "",
    TypeParameterInstantiation: "",
    TypeofTypeAnnotation: "",
    UnaryExpression: "",
    UnionTypeAnnotation: "",
    UpdateExpression: "",
    V8IntrinsicIdentifier: "",
    VariableDeclaration: "",
    VariableDeclarator: "",
    Variance: "",
    VoidTypeAnnotation: "",
    WhileStatement: "",
    WithStatement: "",
    YieldExpression: "",
  },
};

export { colorMap };
